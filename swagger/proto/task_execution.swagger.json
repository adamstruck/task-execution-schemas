{
  "swagger": "2.0",
  "info": {
    "title": "proto/task_execution.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/tasks": {
      "get": {
        "summary": "List tasks.",
        "operationId": "ListTasks",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/tesListTasksResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "description": "OPTIONAL. Filter the task list on:\n  Task.State\n  Task.Tags\n\nThe [OData-ABNF] v4.0 filter syntax rule defines the formal grammar of the $filter query option.\nRequired to support 'eq' and 'and' operations only.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "OPTIONAL. Number of tasks to return in one page.\nMust be less than 2048. Defaults to 256.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page_token",
            "description": "OPTIONAL. Page token is used to retrieve the next page of results.\nIf unspecified, returns the first page of results.\nSee ListTasksResponse.next_page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "description": "OPTIONAL. Affects the fields included in the returned Task messages.\nSee TaskView below.\n\n - BASIC: Task message will include all fields EXCEPT:\n  Task.ExecutorLog.stdout\n  Task.ExecutorLog.stderr\n - FULL: Task message includes all fields.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BASIC",
              "FULL"
            ],
            "default": "BASIC"
          }
        ],
        "tags": [
          "TaskService"
        ]
      },
      "post": {
        "summary": "Create a new task.",
        "operationId": "CreateTask",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/tesTask"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tesCreateTaskRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/tasks/service-info": {
      "get": {
        "summary": "GetServiceInfo provides information about the service,\nsuch as storage details, resource availability, and \nother documentation.",
        "operationId": "GetServiceInfo",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/tesServiceInfo"
            }
          }
        },
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/tasks/{id}": {
      "get": {
        "summary": "Get a task.",
        "operationId": "GetTask",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/tesTask"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/tasks/{id}:cancel": {
      "post": {
        "summary": "Cancel a task.",
        "operationId": "CancelTask",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/tesCancelTaskResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tesCancelTaskRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    }
  },
  "definitions": {
    "tesCancelTaskRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Task identifier.",
          "title": "REQUIRED"
        }
      },
      "description": "CancelTaskRequest describes a request to the CancelTask endpoint."
    },
    "tesCancelTaskResponse": {
      "type": "object",
      "description": "CancelTaskResponse describes a response from the CancelTask endpoint.",
      "title": "OUTPUT ONLY"
    },
    "tesCreateTaskRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "OPTIONAL"
        },
        "project": {
          "type": "string",
          "description": "Describes the project this task is associated with.\nCommonly used for billing on cloud providers (AWS, Google Cloud, etc).",
          "title": "OPTIONAL"
        },
        "description": {
          "type": "string",
          "title": "OPTIONAL"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesTaskParameter"
          },
          "description": "Input files.\nInputs will be downloaded and mounted into the executor container.",
          "title": "OPTIONAL"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesTaskParameter"
          },
          "description": "Output files.\nOutputs will be uploaded from the executor container to long-term storage.",
          "title": "OPTIONAL"
        },
        "resources": {
          "$ref": "#/definitions/tesResources",
          "description": "Request that the task be run with these resources.",
          "title": "OPTIONAL"
        },
        "executors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesExecutor"
          },
          "description": "A list of executors to be run, sequentially.",
          "title": "REQUIRED"
        },
        "volumes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Declared volumes.\nVolumes are shared between executors. Volumes for inputs and outputs are \ninferred and should not be delcared here.",
          "title": "OPTIONAL"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key-value map of arbitrary tags.",
          "title": "OPTIONAL"
        }
      },
      "description": "CreateTaskRequest describes a task to be created and run."
    },
    "tesExecutor": {
      "type": "object",
      "properties": {
        "image_name": {
          "type": "string",
          "description": "Name of the container image, for example:\nubuntu\nquay.io/aptible/ubuntu\ngcr.io/my-org/my-image\netc...",
          "title": "REQUIRED"
        },
        "cmd": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The command to be executed.",
          "title": "REQUIRED"
        },
        "workdir": {
          "type": "string",
          "description": "The working directory that the command will be executed in.\nDefaults to the directory set by the container image.",
          "title": "OPTIONAL"
        },
        "stdin": {
          "type": "string",
          "description": "Path inside the container to a file which will be piped\nto the command's stdin.",
          "title": "OPTIONAL"
        },
        "stdout": {
          "type": "string",
          "description": "Path inside the container to a file where the command's\nstdout will be written to.",
          "title": "OPTIONAL"
        },
        "stderr": {
          "type": "string",
          "description": "Path inside the container to a file where the command's\nstderr will be written to.",
          "title": "OPTIONAL"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesPorts"
          },
          "description": "Port to expose from within the container, blank if none.",
          "title": "OPTIONAL"
        },
        "environ": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Enviromental variables to set within the container.",
          "title": "OPTIONAL"
        }
      },
      "description": "Executor describes a command to run, and its environment."
    },
    "tesExecutorLog": {
      "type": "object",
      "properties": {
        "start_time": {
          "type": "string",
          "description": "Time the executor started, in RFC 3339 format.",
          "title": "OPTIONAL"
        },
        "end_time": {
          "type": "string",
          "description": "Time the executor ended, in RFC 3339 format.",
          "title": "OPTIONAL"
        },
        "stdout": {
          "type": "string",
          "description": "Stdout tail.\nThis is not guaranteed to be the entire log.\nImplementations determine the maximum size.",
          "title": "OPTIONAL"
        },
        "stderr": {
          "type": "string",
          "description": "Stderr tail.\nThis is not guaranteed to be the entire log.\nImplementations determine the maximum size.",
          "title": "OPTIONAL"
        },
        "exit_code": {
          "type": "integer",
          "format": "int32",
          "description": "Exit code.",
          "title": "REQUIRED"
        },
        "host_ip": {
          "type": "string",
          "description": "IP address of host.",
          "title": "OPTIONAL"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesPorts"
          },
          "description": "Ports mapped between the container and host.",
          "title": "OPTIONAL"
        }
      },
      "description": "ExecutorLog describes logging information related to an Executor.",
      "title": "OUTPUT ONLY"
    },
    "tesFileType": {
      "type": "string",
      "enum": [
        "FILE",
        "DIRECTORY"
      ],
      "default": "FILE"
    },
    "tesGetTaskRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Task identifier.",
          "title": "REQUIRED"
        }
      },
      "description": "GetTaskRequest describes a request to the GetTask endpoint."
    },
    "tesListTasksRequest": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "string",
          "description": "Filter the task list on:\n  Task.State\n  Task.Tags\n\nThe [OData-ABNF] v4.0 filter syntax rule defines the formal grammar of the $filter query option.\nRequired to support 'eq' and 'and' operations only.",
          "title": "OPTIONAL"
        },
        "page_size": {
          "type": "integer",
          "format": "int64",
          "description": "Number of tasks to return in one page.\nMust be less than 2048. Defaults to 256.",
          "title": "OPTIONAL"
        },
        "page_token": {
          "type": "string",
          "description": "Page token is used to retrieve the next page of results.\nIf unspecified, returns the first page of results.\nSee ListTasksResponse.next_page_token",
          "title": "OPTIONAL"
        },
        "view": {
          "$ref": "#/definitions/tesTaskView",
          "description": "Affects the fields included in the returned Task messages.\nSee TaskView below.",
          "title": "OPTIONAL"
        }
      },
      "description": "ListTasksRequest describes a request to the ListTasks service endpoint."
    },
    "tesListTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesTask"
          },
          "description": "List of lightweight task descriptions.",
          "title": "REQUIRED"
        },
        "next_page_token": {
          "type": "string",
          "description": "Token used to return the next page of results.\nSee TaskListRequest.next_page_token",
          "title": "OPTIONAL"
        }
      },
      "description": "ListTasksResponse describes a response from the ListTasks endpoint.",
      "title": "OUTPUT ONLY"
    },
    "tesOutputFileLog": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL of the file in storage, e.g. s3://bucket/file.txt",
          "title": "REQUIRED"
        },
        "path": {
          "type": "string",
          "description": "Path of the file inside the container.",
          "title": "REQUIRED"
        },
        "size_bytes": {
          "type": "string",
          "format": "int64",
          "description": "Size of the file in bytes.",
          "title": "REQUIRED"
        }
      },
      "description": "OutputFileLog describes a single output file. This describes\nfile details after the task has completed successfully,\nfor logging purposes.",
      "title": "OUTPUT ONLY"
    },
    "tesPorts": {
      "type": "object",
      "properties": {
        "container": {
          "type": "integer",
          "format": "int64",
          "description": "Port number opened inside the container.",
          "title": "REQUIRED"
        },
        "host": {
          "type": "integer",
          "format": "int64",
          "description": "Port number opened on the host. Must be greater than 1024.\nDefaults to 0, which assigns a random port on the host.",
          "title": "OPTIONAL"
        }
      },
      "description": "Ports describes the port mapping between the container and host."
    },
    "tesResources": {
      "type": "object",
      "properties": {
        "cpu_cores": {
          "type": "integer",
          "format": "int64",
          "description": "Requested number of CPUs",
          "title": "OPTIONAL"
        },
        "preemptible": {
          "type": "boolean",
          "format": "boolean",
          "description": "Is the task allowed to run on preemptible compute instances (e.g. AWS Spot)?",
          "title": "OPTIONAL"
        },
        "ram_gb": {
          "type": "number",
          "format": "double",
          "description": "Requested RAM required in gigabytes (GB)",
          "title": "OPTIONAL"
        },
        "size_gb": {
          "type": "number",
          "format": "double",
          "description": "Requested disk size in gigabytes (GB)",
          "title": "OPTIONAL"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Request that the task be run in these compute zones.",
          "title": "OPTIONAL"
        }
      },
      "description": "Resources describes the resources requested by a task."
    },
    "tesServiceInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Returns the name of the service, e.g. \"ohsu-compbio-funnel\"."
        },
        "doc": {
          "type": "string",
          "description": "Returns a documentation string, e.g. \"Hey, we're OHSU Comp. Bio!\"."
        },
        "storage": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Lists some, but not necessarily all, storage locations supported by the service.\n\nMust be in a valid URL format.\ne.g. \nfile:///path/to/local/funnel-storage\ns3://ohsu-compbio-funnel/storage\netc."
        }
      },
      "description": "ServiceInfo describes information about the service,\nsuch as storage details, resource availability,\nand other documentation.",
      "title": "OUTPUT ONLY"
    },
    "tesServiceInfoRequest": {
      "type": "object",
      "description": "ServiceInfoRequest describes a request to the ServiceInfo endpoint."
    },
    "tesState": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "QUEUED",
        "INITIALIZING",
        "RUNNING",
        "PAUSED",
        "COMPLETE",
        "ERROR",
        "SYSTEM_ERROR",
        "CANCELED"
      ],
      "default": "UNKNOWN",
      "description": "Task states.\n\n - PAUSED: An implementation *may* have the ability to pause a task,\nbut this is not required.",
      "title": "OUTPUT ONLY"
    },
    "tesTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Task identifier.",
          "title": "REQUIRED"
        },
        "request": {
          "$ref": "#/definitions/tesCreateTaskRequest",
          "title": "REQUIRED"
        },
        "state": {
          "$ref": "#/definitions/tesState",
          "title": "REQUIRED"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesTaskLog"
          },
          "description": "Task logging information.\nNormally, this will contain only one entry, but in the case where\na task fails and is retried, an entry will be appended to this list.",
          "title": "REQUIRED"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesOutputFileLog"
          },
          "description": "Information about all output files. Directory outputs are\nflattened into separate items.",
          "title": "REQUIRED"
        }
      },
      "description": "Task describes an instance of a task.",
      "title": "OUTPUT ONLY"
    },
    "tesTaskLog": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesExecutorLog"
          },
          "description": "Logs for each executor",
          "title": "REQUIRED"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Arbitrary logging metadata included by the implementation.",
          "title": "OPTIONAL"
        },
        "start_time": {
          "type": "string",
          "description": "When the task started, in RFC 3339 format.",
          "title": "OPTIONAL"
        },
        "end_time": {
          "type": "string",
          "description": "When the task ended, in RFC 3339 format.",
          "title": "OPTIONAL"
        }
      },
      "description": "TaskLog describes logging information related to a Task.",
      "title": "OUTPUT ONLY"
    },
    "tesTaskParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "OPTIONAL"
        },
        "description": {
          "type": "string",
          "title": "OPTIONAL"
        },
        "url": {
          "type": "string",
          "description": "URL in long term storage, for example:\ns3://my-object-store/file1\ngs://my-bucket/file2\nfile:///path/to/my/file\n/path/to/my/file\netc...",
          "title": "REQUIRED"
        },
        "path": {
          "type": "string",
          "description": "Path of the file inside the container.",
          "title": "REQUIRED"
        },
        "type": {
          "$ref": "#/definitions/tesFileType",
          "description": "Type of the file, FILE or DIRECTORY",
          "title": "REQUIRED"
        },
        "contents": {
          "type": "string",
          "description": "File contents literal. \nImplementations should support a minimum of 128 KiB in this field and may define its own maximum.\nUTF-8 encoded",
          "title": "OPTIONAL"
        }
      },
      "description": "TaskParameter describes input and output files for a Task."
    },
    "tesTaskView": {
      "type": "string",
      "enum": [
        "BASIC",
        "FULL"
      ],
      "default": "BASIC",
      "description": "TaskView affects the fields returned by the ListTasks endpoint.\n\nSome of the fields in task can be large strings (e.g. logs),\nwhich can be a burden on the network. In the default BASIC view,\nthese heavyweight fields are not included, however, a client may\nrequest the FULL version to include these fields.\n\n - BASIC: Task message will include all fields EXCEPT:\n  Task.ExecutorLog.stdout\n  Task.ExecutorLog.stderr\n - FULL: Task message includes all fields."
    }
  }
}
