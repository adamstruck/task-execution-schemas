{
  "swagger": "2.0",
  "info": {
    "title": "task_execution.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/tasks": {
      "get": {
        "summary": "List tasks.\nTaskView is requested as such: \"v1/tasks?view=BASIC\"",
        "operationId": "ListTasks",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/tesListTasksResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "state",
            "description": "OPTIONAL. Filter the list to include tasks with this state.\nIf unspecified, no task filtering is done.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "QUEUED",
              "INITIALIZING",
              "RUNNING",
              "COMPLETE",
              "ERROR",
              "SYSTEM_ERROR",
              "CANCELED"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "page_size",
            "description": "OPTIONAL. Number of tasks to return in one page.\nMust be less than 2048. Defaults to 256.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page_token",
            "description": "OPTIONAL. Page token is used to retrieve the next page of results.\nIf unspecified, returns the first page of results.\nSee ListTasksResponse.next_page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "description": "OPTIONAL. Affects the fields included in the returned Task messages.\nSee TaskView below.\n\n - MINIMAL: Task message will include ONLY the fields:\n  Task.Id\n  Task.State\n - BASIC: Task message will include all fields EXCEPT:\n  Task.ExecutorLog.stdout\n  Task.ExecutorLog.stderr\n  TaskParameter.Contents in Task.Inputs\n - FULL: Task message includes all fields.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MINIMAL",
              "BASIC",
              "FULL"
            ],
            "default": "MINIMAL"
          }
        ],
        "tags": [
          "TaskService"
        ]
      },
      "post": {
        "summary": "Create a new task.",
        "operationId": "CreateTask",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/tesCreateTaskResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tesTask"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/tasks/service-info": {
      "get": {
        "summary": "GetServiceInfo provides information about the service,\nsuch as storage details, resource availability, and \nother documentation.",
        "operationId": "GetServiceInfo",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/tesServiceInfo"
            }
          }
        },
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/tasks/{id}": {
      "get": {
        "summary": "Get a task.\nTaskView is requested as such: \"v1/tasks/{id}?view=FULL\"",
        "operationId": "GetTask",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/tesTask"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "view",
            "description": "OPTIONAL. Affects the fields included in the returned Task messages.\nSee TaskView below.\n\n - MINIMAL: Task message will include ONLY the fields:\n  Task.Id\n  Task.State\n - BASIC: Task message will include all fields EXCEPT:\n  Task.ExecutorLog.stdout\n  Task.ExecutorLog.stderr\n  TaskParameter.Contents in Task.Inputs\n - FULL: Task message includes all fields.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MINIMAL",
              "BASIC",
              "FULL"
            ],
            "default": "MINIMAL"
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/tasks/{id}:cancel": {
      "post": {
        "summary": "Cancel a task.",
        "operationId": "CancelTask",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/tesCancelTaskResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    }
  },
  "definitions": {
    "tesCancelTaskResponse": {
      "type": "object",
      "description": "CancelTaskResponse describes a response from the CancelTask endpoint.",
      "title": "OUTPUT ONLY"
    },
    "tesCreateTaskResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Task identifier assigned by the server.",
          "title": "REQUIRED"
        }
      },
      "description": "CreateTaskResponse describes a response from the CreateTask endpoint.",
      "title": "OUTPUT ONLY"
    },
    "tesExecutor": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "description": "Name of the container image, for example:\nubuntu\nquay.io/aptible/ubuntu\ngcr.io/my-org/my-image\netc...",
          "title": "REQUIRED"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The command to be executed.",
          "title": "REQUIRED"
        },
        "workdir": {
          "type": "string",
          "description": "The working directory that the command will be executed in.\nDefaults to the directory set by the container image.",
          "title": "OPTIONAL"
        },
        "stdin": {
          "type": "string",
          "description": "Path inside the container to a file which will be piped\nto the command's stdin.",
          "title": "OPTIONAL"
        },
        "stdout": {
          "type": "string",
          "description": "Path inside the container to a file where the command's\nstdout will be written to.",
          "title": "OPTIONAL"
        },
        "stderr": {
          "type": "string",
          "description": "Path inside the container to a file where the command's\nstderr will be written to.",
          "title": "OPTIONAL"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesPorts"
          },
          "description": "Port to expose from within the container, blank if none.",
          "title": "OPTIONAL"
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Enviromental variables to set within the container.",
          "title": "OPTIONAL"
        }
      },
      "description": "Executor describes a command to run, and its environment."
    },
    "tesExecutorLog": {
      "type": "object",
      "properties": {
        "start_time": {
          "type": "string",
          "description": "Time the executor started, in RFC 3339 format.",
          "title": "OPTIONAL"
        },
        "end_time": {
          "type": "string",
          "description": "Time the executor ended, in RFC 3339 format.",
          "title": "OPTIONAL"
        },
        "stdout": {
          "type": "string",
          "description": "This is not guaranteed to be the entire log.\nImplementations determine the maximum size and content.",
          "title": "OPTIONAL"
        },
        "stderr": {
          "type": "string",
          "description": "This is not guaranteed to be the entire log.\nImplementations determine the maximum size and content.",
          "title": "OPTIONAL"
        },
        "exit_code": {
          "type": "integer",
          "format": "int32",
          "description": "Exit code.",
          "title": "REQUIRED"
        },
        "host_ip": {
          "type": "string",
          "description": "IP address of host.",
          "title": "OPTIONAL"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesPorts"
          },
          "description": "Ports mapped between the container and host.",
          "title": "OPTIONAL"
        }
      },
      "description": "ExecutorLog describes logging information related to an Executor.",
      "title": "OUTPUT ONLY"
    },
    "tesListTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesTask"
          },
          "description": "List of lightweight task descriptions.",
          "title": "REQUIRED"
        },
        "next_page_token": {
          "type": "string",
          "description": "Token used to return the next page of results.\nSee TaskListRequest.next_page_token",
          "title": "OPTIONAL"
        }
      },
      "description": "ListTasksResponse describes a response from the ListTasks endpoint.",
      "title": "OUTPUT ONLY"
    },
    "tesOutputFileLog": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL of the file in storage, e.g. s3://bucket/file.txt",
          "title": "REQUIRED"
        },
        "path": {
          "type": "string",
          "description": "Path of the file inside the container.",
          "title": "REQUIRED"
        },
        "size_bytes": {
          "type": "string",
          "format": "int64",
          "description": "Size of the file in bytes.",
          "title": "REQUIRED"
        }
      },
      "description": "OutputFileLog describes a single output file. This describes\nfile details after the task has completed successfully,\nfor logging purposes.",
      "title": "OUTPUT ONLY"
    },
    "tesPorts": {
      "type": "object",
      "properties": {
        "container": {
          "type": "integer",
          "format": "int64",
          "description": "Port number opened inside the container.",
          "title": "REQUIRED"
        },
        "host": {
          "type": "integer",
          "format": "int64",
          "description": "Port number opened on the host. Must be greater than 1024.\nDefaults to 0, which assigns a random port on the host.",
          "title": "OPTIONAL"
        }
      },
      "description": "Ports describes the port mapping between the container and host."
    },
    "tesResources": {
      "type": "object",
      "properties": {
        "cpu_cores": {
          "type": "integer",
          "format": "int64",
          "description": "Requested number of CPUs",
          "title": "OPTIONAL"
        },
        "ram_gb": {
          "type": "number",
          "format": "double",
          "description": "Requested RAM required in gigabytes (GB)",
          "title": "OPTIONAL"
        },
        "disk_gb": {
          "type": "number",
          "format": "double",
          "description": "Requested disk size in gigabytes (GB)",
          "title": "OPTIONAL"
        },
        "preemptible": {
          "type": "boolean",
          "format": "boolean",
          "description": "Is the task allowed to run on preemptible compute instances (e.g. AWS Spot)?",
          "title": "OPTIONAL"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Request that the task be run in these compute zones.",
          "title": "OPTIONAL"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Implementation specific resource requests",
          "title": "OPTIONAL"
        }
      },
      "description": "Resources describes the resources requested by a task."
    },
    "tesServiceInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Returns the name of the service, e.g. \"ohsu-compbio-funnel\"."
        },
        "doc": {
          "type": "string",
          "description": "Returns a documentation string, e.g. \"Hey, we're OHSU Comp. Bio!\"."
        }
      },
      "description": "ServiceInfo describes information about the service,\nsuch as storage details, resource availability,\nand other documentation.",
      "title": "OUTPUT ONLY"
    },
    "tesState": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "QUEUED",
        "INITIALIZING",
        "RUNNING",
        "COMPLETE",
        "ERROR",
        "SYSTEM_ERROR",
        "CANCELED"
      ],
      "default": "UNKNOWN",
      "description": "Task states.",
      "title": "OUTPUT ONLY"
    },
    "tesTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Task identifier assigned by the server.",
          "title": "OUTPUT ONLY"
        },
        "state": {
          "$ref": "#/definitions/tesState",
          "title": "OUTPUT ONLY"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesTaskParameter"
          },
          "description": "Input files.\nInputs will be downloaded and mounted into the executor container.",
          "title": "OPTIONAL"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesTaskParameter"
          },
          "description": "Output files.\nOutputs will be uploaded from the executor container to long-term storage.",
          "title": "OPTIONAL"
        },
        "resources": {
          "$ref": "#/definitions/tesResources",
          "description": "Request that the task be run with these resources.",
          "title": "OPTIONAL"
        },
        "executors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesExecutor"
          },
          "description": "A list of executors to be run, sequentially.",
          "title": "REQUIRED"
        },
        "volumes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Declared volumes.\nVolumes are shared between executors. Volumes for inputs and outputs are \ninferred and should not be declared here.",
          "title": "OPTIONAL"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key-value map of arbitrary tags.",
          "title": "OPTIONAL"
        },
        "logs": {
          "$ref": "#/definitions/tesTaskLog",
          "description": "Task logging information.",
          "title": "OUTPUT ONLY"
        }
      },
      "description": "Task describes an instance of a task."
    },
    "tesTaskLog": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesExecutorLog"
          },
          "description": "Logs for each executor",
          "title": "REQUIRED"
        },
        "start_time": {
          "type": "string",
          "description": "When the task started, in RFC 3339 format.",
          "title": "OPTIONAL"
        },
        "end_time": {
          "type": "string",
          "description": "When the task ended, in RFC 3339 format.",
          "title": "OPTIONAL"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tesOutputFileLog"
          },
          "description": "Information about all output files. Directory outputs are\nflattened into separate items.",
          "title": "REQUIRED"
        },
        "syslogs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional system logs.",
          "title": "OPTIONAL"
        }
      },
      "description": "TaskLog describes logging information related to a Task.",
      "title": "OUTPUT ONLY"
    },
    "tesTaskParameter": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Storage URL, for example:\ns3://my-object-store/file1\ngs://my-bucket/file2\nfile:///path/to/my/file3\n/path/to/my/file\netc...",
          "title": "REQUIRED"
        },
        "path": {
          "type": "string",
          "description": "Path of the file inside the container.",
          "title": "REQUIRED"
        },
        "content": {
          "type": "string",
          "description": "File content literal. \nImplementations should support a minimum of 128 KiB in this field and may define its own maximum.\nUTF-8 encoded",
          "title": "OPTIONAL"
        }
      },
      "description": "TaskParameter describes input and output files for a Task."
    }
  }
}
